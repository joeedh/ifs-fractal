{
  "version": 3,
  "sources": ["../scripts/path.ux/scripts/platforms/web/web_api.js"],
  "sourcesContent": ["import {PlatformAPI, isMimeText} from '../platform_base.js';\r\nimport {saveFile, loadFile} from '../../path-controller/util/html5_fileapi.js';\r\n\r\nimport {FileDialogArgs, FilePath} from '../platform_base.js';\r\n\r\nimport {mimeMap} from '../platform_base.js';\r\n\r\nexport function getWebFilters(filters=[]) {\r\n  let types = [];\r\n\r\n  for (let item of filters) {\r\n    let mime = item.mime;\r\n    let exts = [];\r\n\r\n    for (let ext of item.extensions) {\r\n      ext = \".\" + ext;\r\n      if (ext.toLowerCase() in mimeMap) {\r\n        mime = mime !== undefined ? mime : mimeMap[ext.toLowerCase()];\r\n      }\r\n\r\n      exts.push(ext);\r\n    }\r\n\r\n    if (!mime) {\r\n      mime = \"application/x-octet-stream\";\r\n    }\r\n\r\n    types.push({\r\n      description: item.name,\r\n      accept     : {\r\n        [mime]: exts\r\n      }\r\n    });\r\n  }\r\n\r\n  return types;\r\n}\r\n\r\nexport class platform extends PlatformAPI {\r\n  //returns a promise\r\n  static showOpenDialog(title, args = new FileDialogArgs()) {\r\n    let types = getWebFilters(args.filters);\r\n\r\n    return new Promise((accept, reject) => {\r\n      try {\r\n        window.showOpenFilePicker({\r\n          multiple: args.multi,\r\n          types\r\n        }).then(arg => {\r\n          let paths = [];\r\n\r\n          for (let file of arg) {\r\n            paths.push(new FilePath(file, file.name));\r\n          }\r\n\r\n          accept(paths);\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n    /*\r\n    let exts = [];\r\n\r\n    for (let list of args.filters) {\r\n      for (let ext of list.extensions) {\r\n        exts.push(ext);\r\n      }\r\n    }\r\n\r\n    return new Promise((accept, reject) => {\r\n      loadFile(args.defaultPath, exts).then((file) => {\r\n        accept([new FilePath(file)]);\r\n      });\r\n    });*/\r\n  }\r\n\r\n  static writeFile(data, handle, mime) {\r\n    handle = handle.data;\r\n\r\n    return handle.createWritable().then((file) => {\r\n      file.write(data);\r\n      file.close();\r\n    });\r\n  }\r\n\r\n  static showSaveDialog(title, savedata_cb, args = new FileDialogArgs()) {\r\n    if (!window.showSaveFilePicker) {\r\n      return this.showSaveDialog_old(...arguments);\r\n    }\r\n\r\n    let types = getWebFilters(args.filters);\r\n\r\n    return new Promise((accept, reject) => {\r\n      let fname;\r\n      let saveHandle;\r\n\r\n      try {\r\n        saveHandle = window.showSaveFilePicker({types});\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n\r\n      let handle;\r\n\r\n      saveHandle.then((handle1) => {\r\n        handle = handle1;\r\n\r\n        fname = handle.name;\r\n        console.log(\"saveHandle\", handle);\r\n        return handle.createWritable();\r\n      }).then((file) => {\r\n        let savedata = savedata_cb();\r\n\r\n        if (savedata instanceof Uint8Array || savedata instanceof DataView) {\r\n          savedata = savedata.buffer;\r\n        }\r\n\r\n        file.write(savedata);\r\n        file.close();\r\n\r\n        let path = new FilePath(handle, fname);\r\n        accept(path);\r\n      });\r\n    });\r\n  }\r\n\r\n  //returns a promise\r\n  static showSaveDialog_old(title, savedata, args = new FileDialogArgs()) {\r\n\r\n    let exts = [];\r\n\r\n    for (let list of args.filters) {\r\n      if (!Array.isArray(list) && list.filters) {\r\n        list = list.filters;\r\n      }\r\n\r\n      for (let ext of list) {\r\n        exts.push(ext);\r\n      }\r\n    }\r\n\r\n    return new Promise((accept, reject) => {\r\n      saveFile(savedata);\r\n\r\n      window.setTimeout(() => {\r\n        accept(\"undefined\");\r\n      });\r\n    });\r\n  }\r\n\r\n  //path is a FilePath instance, for web this is the actual file data\r\n  static readFile(path, mime = \"\") {\r\n    if (mime === \"\") {\r\n      mime = path.filename;\r\n      let i = mime.length-1;\r\n\r\n      while (i > 0 && mime[i] !== \".\") {\r\n        i--;\r\n      }\r\n\r\n      mime = mime.slice(i, mime.length).trim().toLowerCase();\r\n      if (mime in mimeMap) {\r\n        mime = mimeMap[mime];\r\n      }\r\n    }\r\n\r\n    return new Promise((accept, reject) => {\r\n      path.data.getFile().then((file) => {\r\n        console.log(\"file!\", file);\r\n\r\n        let promise;\r\n\r\n        if (isMimeText(mime)) {\r\n          promise = file.text();\r\n        } else {\r\n          promise = file.arrayBuffer();\r\n        }\r\n\r\n        promise.then(data => {\r\n          accept(data);\r\n        });\r\n      });\r\n    });\r\n\r\n    return new Promise((accept, reject) => {\r\n      let data = path.data;\r\n\r\n      if (isMimeText(mime)) {\r\n        let s = '';\r\n        data = new Uint8Array(data);\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n          s += String.fromCharCode(data[i]);\r\n        }\r\n\r\n        data = s;\r\n      }\r\n\r\n      accept(data);\r\n    });\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
